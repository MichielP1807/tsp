name: Check

on:
  pull_request:
    branches: [ "main" ]

jobs:
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy --workspace --tests -- --deny "warnings"

  rust-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --all --check

  cargo-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo test && cargo test --doc

  cargo-deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check
          arguments: --workspace

  fuzz:
    name: run cargo-fuzz
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features:
          - ""
    steps:
      - uses: actions/checkout@v4
      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@be73d7920c329f220ce78e0234b8f96b7ae60248
        with:
          toolchain: nightly
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo fuzz
        uses: taiki-e/install-action@8984d603c208823d3c1a1b796f4081736f3ae3f9
        with:
          tool: cargo-fuzz
      - name: Smoke-test fuzz targets
        run: |
          cargo fuzz build ${{ matrix.features }}
          for target in $(cargo fuzz list ${{ matrix.features }}) ; do
            cargo fuzz run ${{ matrix.features }} $target -- -max_total_time=10
          done
